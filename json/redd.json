{
    "name": "REDD",
    "table": [],
    "sections": [
        {
            "title": "Data Set Information",
            "content": "- Law Frequency Power Data  \n\n  ```\n  The low_freq/ directory contains average power readings for both the\n  two power mains and the individual circuits of the house (eventually,\n  this will also contain plug loads for houses with individual plug\n  monitors).  The data is logged at a frequency of about once a second\n  for a mains and once every three seconds for the circuits.  The\n  directory is organized as follows:\n  \n  redd/low_freq/\n    house_{1..n}/          -- directories for each house\n      labels.dat           -- device category labels for every channel\n      channel_{1..k}.dat   -- time/wattage readings for each channel\n  \n  The main directory consists of several house_i directories, each of\n  which contain all the power readings for a single house.  Each house\n  subdirectory consists of a labels.dat and several channels_i.dat\n  files.  The labels file contains channel numbers and a text label\n  indicating the general category of device on this channel, for\n  example:\n  \n  1 mains_1\n  2 mains_2\n  3 refrigerator\n  4 lighting\n  ...\n  \n  In cases where the circuit has different device types on it (for\n  example, circuits that power multiple outlets), we have attempted to\n  best categorize the main type of appliance on the circuit.\n  \n  Each channel_i.dat file contains UTC timestamps (as integers) and\n  power readings (recording the apparent power of the circuit) for\n  the channel:\n  \n  ...\n  1306541834      102.964\n  1306541835      103.125\n  1306541836      104.001\n  1306541837      102.994\n  1306541838      102.361\n  1306541839      102.589\n  ...\n  ```\n\n- High Frequency Waveform Data    \n\n  ```\n  The high_freq/ directory contains AC waveform data for the power mains\n  and a single phase of the voltage for the home.  In order to reduce\n  the data to a manageable size, we have compressed these waveforms using\n  lossy compression.  Briefly, the procedure is as follows:\n  \n  Because the voltage signal in most homes is approximately sinusoidal\n  (unlike the current signals, which can vary substantially from a\n  sinusoidal wave), we find zero-crossings of the voltage signal to\n  isolate a single cycle of the AC power.  For the time spanned by this\n  single cycle, we record both the current and voltage signals, and\n  report this entire waveform.  However, because the waveforms remain\n  approximately constant for long periods of time, we only report the\n  current and voltage waveforms at \"change points\" in the signal (we\n  identify change points using a method known as total variation\n  regularization, but a full description of the approach is outside the\n  scope of this readme).\n  \n  As before, the high_freq/ directory contains a subdirectory for each\n  house, each of which contain current_1.dat, current_2.dat, and\n  voltage.dat files.\n  \n  redd/low_freq/\n    house_{1..n}/          -- directories for each house\n      current_1.dat        -- current waveforms for first power mains\n      current_2.dat        -- current waveforms for second power mains\n      voltage.dat          -- voltage waveforms\n  \n  The data files are text files, where each line contains:\n  \n  1) A decimal UTC timestamp, in the same format as the timestamps for\n  the low frequency data, but allowing for fractional parts\n  2) A cycle count.  Although this is represented in the file as a\n  double, it is in fact an integer that indicates for how many AC cycles\n  this particular waveform remains.\n  3) 275 decimal values, indicating the value of the waveform (in amps or\n  volts), at equally-spaced portions of the cycle.\n  \n  Thus, an example file might be:\n  \n  1297340206.597013 135.000000 0.000000 3.623859 7.254136 10.949398 ...\n  1297340208.844086 722.000000 0.000000 3.638527 7.249567 10.929027 ...\n  ....\n  \n  Indicating that the waveform in the first line occurred first at\n  timestamp 1297340206.597013 and lasted for 135 cycles.\n  ```\n\n- High Frequency Raw Data   \n\n  ```\n  Finally, the high_freq_raw/ directory contains raw current and voltage\n  waveforms (unaligned and without compression), for a small number of\n  sample points throughout the data.  This is main intended for those\n  who wish to test different compression/filtering methods beyond what\n  we do in the high_freq/ data.  Although for practicality we are not\n  planning to broadly distribute raw data for the entire data set (this\n  would consist of more than a terabyte of data), if other groups are\n  able to develop substantially better compression/filtering techniques\n  then we'd be happy to share the full data or run these proposed\n  algorithms on the full uncompressed data set.\n  \n  The high_freq_raw/ directory is organized similar to the high_freq/\n  directory, except that each current_1, current_2, and voltage files\n  are instead themselves directories that contain raw binary data:\n  \n  high_freq_raw/\n    house_{1..n}/          -- directories for each house\n      current_1/           -- current waveforms for first power mains\n        <timestamp>.bz2    -- compressed binary data\n        ...\n      current_2/           -- current waveforms for second power mains\n      voltage/             -- voltage waveforms\n  \n  The current_1/, current_2/, and voltage/ directories contain a number\n  of <timestamp>.bz2 files, for example 1303091049.bz2.  These are\n  compressed binary files containing the raw current/voltage waveforms\n  from the A/D as a sequence of 32-bit floating point numbers (stored in\n  little-endian format).  Interspersed through the data are several\n  'time' ASCII codes (hex: 0x74 0x69 0x6d 0x65).  This indicates that an\n  8 byte time code is to follow, indicating the the time at the\n  beginning of the sample.  The time is stored as two binary integers\n  (again in little endian format): the first indicating the UTC\n  timestamp in seconds, and the second indicating the fractional portion\n  of the timestamp in nano-seconds.  The timestamps are taking using the\n  Windows clock on the collecting machines, so are likely only accurate\n  to the millisecond level or so.\n  ```"
        }
    ],
    "references": []
}